# -*- coding: utf-8 -*-
"""
Created on Sun Dec  5 19:09:16 2021

@author: i368o351
"""
import os
import sys
import subprocess
import pkg_resources

# Check if required libraries are not installed
required = {'pandas', 'ipynbname', 'datetime'}
installed = {pkg.key for pkg in pkg_resources.working_set}
missing = required - installed

if missing:
    print('Missing package(s) to be installed', missing)
    python = sys.executable
    subprocess.check_call([python, '-m', 'pip', 'install', *missing], stdout=subprocess.DEVNULL)


import pandas as pd 
import ipynbname
from datetime import datetime


def create_log_entry(log_file_loc, log_dict ):
    '''
    This function creates a unique log_entry for every run of a  model
    Input: Log_file_loc: Path of log Excel sheet
    log_dict: Dictionary containing all the param to be saved
    
    Output: Returns the index of the training in the 
    excel sheet and updates the excel sheet
    
    '''
    df = pd.read_excel(log_file_loc,header = 0, index_col= [0])
    Row ={}
    params_to_be_updated = []
    
    #print( globals() )
    
    # (1)  S_N
    if 'S_N' in log_dict.keys() :
        Row['S_N'] = log_dict['S_N']
    else:
        Row['S_N'] = len(df.index)
    
    # (2) Start time
    Row['Start_time'] = datetime.strftime( datetime.now(),'%d_%B_%y_%H%M')
    
    # (3) Notebook_name
    try:
        Row['NoteBook_name'] = os.path.basename(__file__)
    except:
        Row['NoteBook_name'] = ipynbname.name() 
    finally:
        print('Could not get file name: auto-generating name')
        if 'Notebook_name' in log_dict.keys():
            Row['NoteBook_name'] = log_dict['Notebook_name']
        else:
            Row['NoteBook_name'] = Row['Start_time']
    
    # (4) Unique_ID
    try:
        Unique_ID = f"{Row['NoteBook_name']}_{Row['Start_time']}"
    except:
        Unique_ID = Row['Start_time']
    
    # (5) Uniqueness of model run
    # Check if Uniqueness_of_each_run exists in global variables
    if  "Uniqueness_of_each_run" in log_dict.keys() : #"Uniqueness_of_each_run" in globals() or
        if log_dict["Uniqueness_of_each_run"] in df.loc[:,'Uniqueness_of_each_run']:
            print('The uniqueness of this run already exist in previous run: please update')
        Row['Uniqueness_of_each_run'] = log_dict['Uniqueness_of_each_run']
    else:
        Row['Uniqueness_of_each_run'] = ''
        params_to_be_updated.append('Uniqueness_of_each_run')
    
    # (6) Base dir
    # Check if base_dir or base_path exist in global variables
    if "base_dir" in log_dict.keys() :  #globals():
       Row['Base_dir']  = log_dict['base_dir']
    elif "base_path" in log_dict.keys() : #globals():
        Row['Base_dir'] = log_dict['base_path']
    else:
        Row['Base_dir'] = ''
        print('Both base_dir and base_path do not exist in workspace: Please create before update call')
        params_to_be_updated.append('Base_dir')
    
    # (7) Train shape
    # Train_shape
    if "Train_shape" in log_dict.keys(): 
        Row['Train_shape']  = log_dict['Train_shape']
    else:
        Row['Train_shape'] = ''
        print('Train_shape is not in workspace')
        params_to_be_updated.append('train_shape')
    
    # (8) Output shape
    # Output_shape
    if "Output_shape" in log_dict.keys() :
        Row['Output_shape']  = log_dict['Output_shape']
    else:
        Row['Output_shape'] = ''
        print('Output_shape is not in workspace')
        params_to_be_updated.append('Output_shape')
    
    # (9) Num_epochs
    # num_epochs
    if "num_epochs" in log_dict.keys() :
        Row['num_epochs']  = log_dict['num_epochs']
    else:
        Row['num_epochs'] = ''
        print('num_epochs is not in workspace')
        params_to_be_updated.append('num_epochs')
    
    # (10) Activation function   
    #    Activation_function
    if "Activation_function" in log_dict.keys() :
        Row['Activation_function'] = log_dict['Activation_function'] 
    else:
        Row['Activation_function'] = ''
        print('Activation_function not in workspace')
        params_to_be_updated.append('Activation_function')
        
    # (11) Optimizer
    if "optimizer" in log_dict.keys() :
        Row['optimizer'] = log_dict['optimizer']
    else:
        Row['optimizer'] = ''
        print('Optimizer not in workspace')
        params_to_be_updated.append('optimizer')
        
#    Row['Activation_function'] = ''    
#    Row['optimizer'] = ''

    # (12) learning_rate
    if "learning_rate" in log_dict.keys() :
        Row['learning_rate'] = log_dict['learning_rate']
    else:
        Row['learning_rate'] = ''
        print('learning_rate not in workspace')
        params_to_be_updated.append('learning_rate')
            

    # (13) loss_function
    if "loss_function" in log_dict.keys() :
        Row['loss_function'] = log_dict['loss_function']
    else:
        Row['loss_function'] = ''
        print('loss_function not in workspace')
        params_to_be_updated.append('loss_function')
        

    # (13) Accuracy_per_epoch
    if "Accuracy_per_epoch" in log_dict.keys() :
        Row['Accuracy_per_epoch'] = log_dict['Accuracy_per_epoch']
    else:
        Row['Accuracy_per_epoch'] = ''
        print('Accuracy_per_epoch not in workspace')
        params_to_be_updated.append('Accuracy_per_epoch')
        
    
    # (14) Accuracy_per_epoch
    if "Loss_per_epoch" in log_dict.keys() :
        Row['Loss_per_epoch'] = log_dict['Loss_per_epoch']
    else:
        Row['Loss_per_epoch'] = ''
        print('Loss_per_epoch not in workspace')
        params_to_be_updated.append('Loss_per_epoch')
 
    
    # (15) Stop_time
    if "Stop_time" in log_dict.keys() :
        Row['Stop_time'] = log_dict['Stop_time']
    else:
        Row['Stop_time'] = ''
        print('Stop_time not in workspace')
        params_to_be_updated.append('Stop_time')

    
    
    Row['Model_config'] = ''
    params_to_be_updated.append('Model_config')

    # (17) Performance_on_test_set
    if "Performance_on_test_set" in log_dict.keys() :
        Row['Performance_on_test_set'] = log_dict['Performance_on_test_set']
    else:
        Row['Performance_on_test_set'] = ''
        print('Performance_on_test_set not in workspace')
        params_to_be_updated.append('Performance_on_test_set')
    
    # output_path
    if "output_path" in log_dict.keys() :
        Row['output_path'] = log_dict['output_path']
    else:
        Row['output_path'] = ''
        print('output_path is not in workspace')
        params_to_be_updated.append('output_path')
      
    # Shuffle
    if "shuffle" in log_dict.keys() :
        Row['shuffle'] = log_dict['shuffle'] 
    else:
        Row['shuffle'] = ''
        print('shuffle indicator is not in workspace')
        params_to_be_updated.append('shuffle')
        
    Row['Computer_name'] = os.environ['COMPUTERNAME']
    
    if "extras" in log_dict.keys() :
        Row['extras'] = log_dict['extras'] 
    else:
        Row['extras'] = ''
        print('extras  is not in workspace')
        params_to_be_updated.append('extras')
    
    # Print entries to be saved
    print(f'Current run hyper_params are {Row.keys()}:{Row.values()}')
    
    print(f'Fields to be updated include: {params_to_be_updated}')
        
    # Update or create new entry in Excel sheet and save hyper params
    
    if 'S_N' in log_dict.keys() :
        df.iloc[log_dict['S_N'],:] = Row
    else:
        df = df.append(Row, ignore_index=True)
    
   
    df.to_excel(log_file_loc,index=False)
    return Row['S_N']
    
def update_log_entry(log_file_loc, S_N, model, history):
    
    # This updates after Model training is complete and populates based on training data
    # #Parameters
    # ----------
    # log_file_loc : String
    #     Absolute path of log Excel Sheet.
    # S_N : Numeric (int/float)
    #     The idx of the log_entry.
    
    # model : Keras model
    #     The model whose parameter is to be saved.

    # Returns: params_to_be_updated
    # -------
    # None.
    
   
    df = pd.read_excel(log_file_loc,header = 0)
    params_to_be_updated = []
    
    # TO DO: Assert S_N is numeric
    
    log_dict = {}
    log_dict.update(df.iloc[S_N])
    
    # ['Uniqueness_of_model']
    if not log_dict["Uniqueness_of_each_run"]:
        print('Uniqueness_of_each_run is yet to be defined')
        params_to_be_updated.append('Uniqueness_of_each_run')
         
    else:
        if log_dict["Uniqueness_of_each_run"] in df.loc[:,'Uniqueness_of_each_run']:
            print('The uniqueness of this run already exist in previous run: please update')
        
    
    
    # ['Activation_function']
    try:       
        print(S_N)
        df.loc[S_N,'Activation_function'] =  model.get_config()['layers'][-1]['config']['activation'] 
    except:
        df.loc[S_N,'Activation_function']  = ''
        print('Could not automatically populate activation function')
        params_to_be_updated.append('Activation_function')       
     
    
    # ['optimizer']
    try:
        df.loc[S_N,'optimizer'] =  model.optimizer._name 
    except:
        df.loc[S_N,'optimizer']  = ''
        print('Could not automatically populate Optimizer name')
        params_to_be_updated.append('optimizer')        
   
    
    # learning_rate
    try:
        df.loc[S_N,'learning_rate'] =  model.optimizer.learning_rate.numpy() 
    except:
        df.loc[S_N,'learning_rate']  = ''
        print('Could not automatically populate learning_rate')
        params_to_be_updated.append('learning_rate')
    
    
    # Loss_function
    try:
        df.loc[S_N,'Loss_function']  =  model.loss.name 
    except:
        df.loc[S_N,'Loss_function']   = ''
        print('Could not automatically populate Loss_function')
        params_to_be_updated.append('Loss_function')
    
    
    # accuracy
    try:
        #print(history.history['accuracy'] )
        df.loc[S_N,'accuracy'] =  [ history.history['accuracy'][-1] ]
    except:
        df.loc[S_N,'accuracy']  = []
        print('Accuracy_per_epoch could not be automatically populated')
        params_to_be_updated.append('accuracy')
    
    
    # Loss_per_epoch(loss)
    try:
        df.loc[S_N,'loss'] =  history.history['loss'] 
    except:
        df.loc[S_N,'loss']  = ''
        print('Could not automatically populate Loss_per_epoch')
        params_to_be_updated.append('loss')
    
    
    # Stop_time
    df.loc[S_N,'Stop_time'] = datetime.strftime( datetime.now(),'%d_%B_%y_%H%M')
    
    # Model_config
    try:
        df.loc[S_N,'Model_config'] = model.get_config()
    except:
        df.loc[S_N,'Model_config']   = ''
        print('Could not automatically populate Model_config')
        params_to_be_updated.append('Model_config')
   
    
    #Performance_on_test_set
    # df.loc[S_N,'Performance_on_test_set'] = history.accuracy
    
    # output_path
    if not log_dict["output_path"]:
        print('output_path is yet to be defined')
        params_to_be_updated.append('output_path')         
    else:
        df.loc[S_N,'output_path']  = log_dict["output_path"]
             
    
    print(f'Fields to be updated include: {params_to_be_updated}')
    df.to_excel(log_file_loc)
    
    return df.iloc[S_N,:]
    
         

        
        
    
   
    












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































